version: "3.8"
services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - appnet

  backend1:
    build: 
      context: .
      dockerfile: Dockerfile.redis
    environment:
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - IS_LEADER=true
      - NAME=backend1
      - DB_HOST=host.docker.internal
      - DB_PORT=15432
      - DB_NAME=aviator_game
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    networks:
      - appnet

  backend2:
    build: 
      context: .
      dockerfile: Dockerfile.redis
    environment:
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - NAME=backend2
      - DB_HOST=host.docker.internal
      - DB_PORT=15432
      - DB_NAME=aviator_game
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    networks:
      - appnet

  backend3:
    build: 
      context: .
      dockerfile: Dockerfile.redis
    environment:
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - NAME=backend3
      - DB_HOST=host.docker.internal
      - DB_PORT=15432
      - DB_NAME=aviator_game
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    networks:
      - appnet

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - appnet

networks:
  appnet:
    driver: bridge
