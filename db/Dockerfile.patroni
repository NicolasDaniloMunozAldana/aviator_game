FROM postgres:14

# Instalar dependencias
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Crear entorno virtual e instalar Patroni
RUN python3 -m venv /opt/patroni-venv \
    && /opt/patroni-venv/bin/pip install --upgrade pip \
    && /opt/patroni-venv/bin/pip install patroni[etcd] psycopg2-binary

# Crear directorio para Patroni y darle permisos al usuario postgres
RUN mkdir -p /opt/patroni \
    && chown -R postgres:postgres /opt/patroni \
    && chown -R postgres:postgres /opt/patroni-venv

# Crear directorios necesarios y darles permisos
RUN mkdir -p /var/lib/postgresql/data/patroni \
    && mkdir -p /tmp/archive \
    && chown -R postgres:postgres /var/lib/postgresql/data \
    && chown -R postgres:postgres /tmp/archive \
    && chmod 700 /var/lib/postgresql/data/patroni

# Crear script de inicializaci√≥n
COPY <<EOF /docker-entrypoint.sh
#!/bin/bash
set -e

# Asegurar permisos correctos
chown -R postgres:postgres /var/lib/postgresql/data
chmod 700 /var/lib/postgresql/data

# Cambiar al usuario postgres y ejecutar patroni
exec gosu postgres /opt/patroni-venv/bin/patroni /opt/patroni/patroni.yml
EOF

RUN chmod +x /docker-entrypoint.sh \
    && apt-get update && apt-get install -y gosu && rm -rf /var/lib/apt/lists/*

# Exponer puertos
EXPOSE 5432 8008

# Comando de inicio
CMD ["/docker-entrypoint.sh"]